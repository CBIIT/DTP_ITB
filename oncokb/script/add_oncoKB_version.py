#!/usr/bin/python3
"""
Add oncoKB version to maf file

Author:TC Chang
"""
import csv
import sys
import os
import argparse
from collections import defaultdict
from pprint import pformat
import math

version = '1.0.05052022'


def get_args():
        parser = argparse.ArgumentParser(description = __doc__)
        parser.add_argument(
                '-f','--maffile',
                metavar='<maffile>',
                help='File should be .maf file '
                        'generated by oncokb annotator'
        )
        parser.add_argument(
               '-i', '--infile',
               metavar='<infile>',
               help='oncokb version file'
        )
        parser.add_argument(
                '-v', '--version',
                action = 'version',
                version = '%(prog)s - v' + version
        )

        args = parser.parse_args()

        if (args.maffile is None):
                sys.stderr.write("ERROR: You must input a .maf file \n")
                sys.exit(1)
        if (args.infile is None):
                sys.stderr.write("ERROR: You must input a oncokb version file \n")
                sys.exit(1)
        return args

def main(maffile,infile):
	ver=[]
	with open(infile, "r") as afile:
		for line in afile:
			if line.startswith("OncoKB data version"):
				line =line.rstrip().split()
				onco_ver= str(line[3]).split(",")[0]
				#print (onco_ver)
				ver.append(onco_ver)

	#print (ver)
	with open(maffile,"r") as bfile:
		for row in bfile:
			if row.startswith("Hugo_Symbol"):
				row = row.split("\t")
				row = [i.replace('\n','') for i in row]
				new_row = row + ["Version"]
				print ("\t".join(new_row))
			else:
				row = row.split("\t")
				row = [i.replace('\n','') for i in row]
				new_row = row + ver
				print ("\t".join(new_row))
			
if __name__ == '__main__':
        args = get_args()
### Should input countfile and foldchange ###
        main(args.maffile,args.infile)
