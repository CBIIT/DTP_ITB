#!/usr/bin/python3
"""
Filter MAF oncoKB file

Author:TC Chang
"""

import csv
import sys
import os
import argparse
from collections import defaultdict
from pprint import pformat
import math

version = '1.0.05052022'


def get_args():
	parser = argparse.ArgumentParser(description = __doc__)
	parser.add_argument(
                '-f','--maffile',
                metavar='<maffile>',
                help='File should be .maf file '
                        'generated by oncokb annotator'
        )
	parser.add_argument(
                '-v', '--version',
                action = 'version',
                version = '%(prog)s - v' + version
        )

	args = parser.parse_args()
	
	if (args.maffile is None):
		sys.stderr.write("ERROR: You must input a MOMA .maf file \n")
		sys.exit(1)
	return args

def main(maffile):
	blacklist = "script/oncoKB_blacklist"

	adict={}
	with open(blacklist,"r") as blacklist:
		for row in blacklist:
			row = row.rstrip().split("\t")
			hugo_aa = str(row[0]) +"$"+ str(row[1])
			adict[hugo_aa] = 1

	with open(maffile, "r") as afile:
		for line in afile:
			if not line.startswith("Hugo_Symbol"):
				line = line.split("\t")
				hugo = str(line[0])
				aa = str(line[39])
				hugo_aa = hugo +"$"+aa
				MUTATION_EFFECT = str(line[145])
				ONCOGENIC = str(line[146])
				HIGHEST_LEVEL = str(line[155])
				CITATIONS = str(line[156])
			
				if "Unknown" not in MUTATION_EFFECT or "Unknown" not in ONCOGENIC:
					line = [i.replace('\n','') for i in line]
					item = "\t".join(line)
					if hugo_aa not in adict:
						print (item)
				elif HIGHEST_LEVEL != "" or CITATIONS != "":
					line = [i.replace('\n','') for i in line]
					item = "\t".join(line)
					if hugo_aa not in adict:
						print (item)

			else:
				line = line.split("\t")
				line = [i.replace('\n','') for i in line]
				item = "\t".join(line)
				print (item)
			
if __name__ == '__main__':
	args = get_args()
### Should input maf file ###
	main(args.maffile)

